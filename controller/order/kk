if(data.exits){
    let diffqty=data.qty - prod.qty;
     if(diffqty > 0){
         oldOrder.orderPrice-=diffqty * oldOrder.data.price;
         oldOrder.totalQty-=diffqty;
         let product=await Product.findById(prod.product).exec();
         if(product.qty == 0 )
         await Product.updateOne({_id:prod.product},{qty:diffqty,availability:true});
         else await Product.updateOne({_id:prod.product},{qty:diffqty+product.qty});
     }
     else{
         let product=await Product.findById(prod.product).exec();
         let finalQty=product.qty - (-1 *diffqty);
         if(finalQty > 0 )
         await Product.updateOne({_id:prod.product},{qty:finalQty});
         else if (finalQty == 0)
         await Product.updateOne({_id:prod.product},{qty:finalQty,availability:false});
         else{
         }

     }  
}
else{
    let updateStatus= await   upateOrderProducts(oldOrder.totalQty,oldOrder.orderPrice,products,"Can't place order, some producst are not available",res);
    if(! updateStatus.status) return updateStatus.data;
    const orderData={orderProducts:products,totalQty:updateStatus.data.totalQty,orderPrice:updateStatus.data.orderPrice};
    const order=await Order.findOneAndUpdate({_id:id},orderData,{new:true});
  return displayData(res,200,true,"order has been successfully updated",{order});   
   }